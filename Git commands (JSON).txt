JSON
 4. github.com, click + --> New repository - cоздать внешний репозиторий c названием JSON.
 5. git clone (ссылка на репозиторий) - клонировать репозиторий JSON на локальный компьютер.
 6. cat > new.json - внутри локального JSON создать файл “new.json”.
 7. git add "new.json" - добавить файл под гит.
 8. git commit -m "new.json" - закоммитить файл.
 9. git push - отправить файл на внешний GitHub репозиторий.
 10. vim "new.json" - отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 11. git add "new.json" / git commit -m "new.json" / git push - отправить изменения на внешний репозиторий.
 12. cat > preferences.json - создать файл preferences.json
 13. vim "preferences.json" / :wq - в файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 14. vim "skills.json" / :wq - cоздать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 15. git add . / git commit -m "preferences/skills" / git push - отправить сразу 2 файла на внешний репозиторий.
 16. Add new file - на веб интерфейсе создать файл bug_report.json.
 17. Commit new file - сохранить изменения на веб интерфейсе.
 18. Edit this file - на веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Commit changes - сохранить изменения на веб интерфейсе.
 20. git pull - cинхронизировать внешний и локальный репозиторий JSON
